/**
 * Copyright Â© 2016-2019 The Thingsboard Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

option java_package = "org.thingsboard.server.gen.edge";
option java_multiple_files = true;
option java_outer_classname = "EdgeProtos";

package edge;

// Interface exported by the ThingsBoard Edge Transport.
service EdgeRpcService {

  rpc handleMsgs(stream RequestMsg) returns (stream ResponseMsg) {}

}

/**
 * Data Structures;
 */
message RequestMsg {
  RequestMsgType msgType = 1;
  ConnectRequestMsg connectRequestMsg = 2;
  UplinkMsg uplinkMsg = 3;
}

message ResponseMsg {
  ResponseMsgType msgType = 1;
  ConnectResponseMsg connectResponseMsg = 2;
  UplinkResponseMsg uplinkResponseMsg = 3;
  DownlinkMsg downlinkMsg = 4;
}


enum RequestMsgType {
  CONNECT_RPC_MESSAGE = 0;
  UPLINK_RPC_MESSAGE = 1;
}

message ConnectRequestMsg {
  string edgeRoutingKey = 1;
  string edgeSecret = 2;
}

enum ConnectResponseCode {
  ACCEPTED = 0;
  BAD_CREDENTIALS = 1;
  SERVER_UNAVAILABLE = 2;
}

message ConnectResponseMsg {
  ConnectResponseCode responseCode = 1;
  string errorMsg = 2;
  EdgeConfigurationProto configuration = 3;
}

message EdgeConfigurationProto {
  int64 tenantIdMSB = 1;
  int64 tenantIdLSB = 2;
  string name = 5;
  string routingKey = 6;
  string type = 7;
}

enum ResponseMsgType {
  SAVE_ENTITY_MESSAGE = 0;
  DELETE_ENTITY_MESSAGE = 1;
}

message CloudDownlinkDataProto {
  string deviceName = 1;
  string deviceType = 2;
  bytes tbMsg = 3;
}

/**
 * Main Messages;
 */

message UplinkMsg {
  int32 uplinkMsgId = 1;
}

message UplinkResponseMsg {
  bool success = 1;
  string errorMsg = 2;
}

message DownlinkMsg {
  CloudDownlinkDataProto cloudData = 1;
}
